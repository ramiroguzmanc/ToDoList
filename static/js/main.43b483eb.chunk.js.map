{"version":3,"sources":["Context/index.js","Context/useLocalStorage.js","Components/CreateTodoButton.jsx","Components/TodoCounter.jsx","Components/TodoSearch.jsx","Containers/TodoList.jsx","Components/TodoItem.jsx","Containers/Modal.jsx","Containers/TodoForm.jsx","Containers/AppUI.jsx","App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","toDos","saveToDos","searchValue","setSearchValue","openModal","setOpenModal","completedToDos","filter","todo","completed","length","totalToDos","searchedToDos","toDoText","text","toLowerCase","searchText","includes","Provider","value","addToDo","newToDos","push","id","onToDoStateChange","todoIndex","findIndex","deleteToDo","splice","children","CreateTodoButton","useContext","className","onClick","TodoCounter","TodoSearch","type","placeholder","onChange","ev","target","TodoList","TodoItem","Checkbox","checked","inputProps","color","taskID","IconButton","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","e","preventDefault","AppUI","Fragment","map","App","render","StrictMode"],"mappings":"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","file":"static/js/main.43b483eb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n  const {\r\n    item: toDos,\r\n    saveItem: saveToDos,\r\n    loading,\r\n    error,\r\n  } = useLocalStorage(\"TODOS_V1\", []);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const completedToDos = toDos.filter((todo) => !!todo.completed).length; // Doble falso (!!) es verdadero = true, esto serÃ­a el equivalente a poner todo.completed == true\r\n  const totalToDos = toDos.length;\r\n\r\n  let searchedToDos = [];\r\n\r\n  if (searchValue.length >= 1) {\r\n    searchedToDos = toDos.filter((todo) => {\r\n      const toDoText = todo.text.toLowerCase();\r\n      const searchText = searchValue.toLowerCase();\r\n      return toDoText.includes(searchText);\r\n    });\r\n  } else {\r\n    searchedToDos = toDos;\r\n  }\r\n\r\n  const addToDo = function (text) {\r\n    const newToDos = [...toDos];\r\n    newToDos.push({\r\n      id: totalToDos + 1,\r\n      completed: false,\r\n      text: text,\r\n    });\r\n    saveToDos(newToDos);\r\n  };\r\n\r\n  const onToDoStateChange = function (id) {\r\n    const todoIndex = toDos.findIndex((todo) => todo.id === id);\r\n    const newToDos = [...toDos];\r\n    newToDos[todoIndex].completed = !newToDos[todoIndex].completed;\r\n    saveToDos(newToDos);\r\n  };\r\n\r\n  const deleteToDo = function (id) {\r\n    const todoIndex = toDos.findIndex((todo) => todo.id === id);\r\n    const newToDos = [...toDos];\r\n    newToDos.splice(todoIndex, 1);\r\n    saveToDos(newToDos);\r\n  };\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        totalToDos,\r\n        completedToDos,\r\n        searchValue,\r\n        setSearchValue,\r\n        error,\r\n        loading,\r\n        searchedToDos,\r\n        addToDo,\r\n        onToDoStateChange,\r\n        deleteToDo,\r\n        openModal,\r\n        setOpenModal,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [item, setItem] = useState(initialValue);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n        let parsedItem;\r\n\r\n        if (localStorageItem) {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        } else {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n          parsedItem = initialValue;\r\n        }\r\n\r\n        setItem(parsedItem);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    }, 1000);\r\n  });\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      const stringifiedItem = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringifiedItem);\r\n      setItem(newItem);\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  return { item, saveItem, loading, error };\r\n}\r\n\r\nexport { useLocalStorage };\r\n","import React from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"../styles/CreateTodoButton.css\";\r\nimport { useContext } from \"react\";\r\nimport { TodoContext } from \"../Context\";\r\n\r\nconst CreateTodoButton = () => {\r\n  const { setOpenModal } = useContext(TodoContext);\r\n\r\n  return (\r\n    <button className=\"button\" onClick={() => setOpenModal(true)}>\r\n      <AddIcon />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { CreateTodoButton };\r\n","import React, { useContext } from \"react\";\r\nimport { TodoContext } from \"../Context\";\r\nimport \"../styles/TodoCounter.css\";\r\n\r\nconst TodoCounter = () => {\r\n  const { completedToDos, totalToDos } = useContext(TodoContext);\r\n\r\n  return (\r\n    <span className=\"TodoCounter\">\r\n      Has completado <b>{completedToDos}</b> de <b>{totalToDos}</b> ToDos\r\n    </span>\r\n  );\r\n};\r\n\r\nexport { TodoCounter };\r\n","import React, { useContext } from \"react\";\r\nimport { TodoContext } from \"../Context\";\r\nimport \"../styles/TodoSearch.css\";\r\n\r\nconst TodoSearch = () => {\r\n  const { searchValue, setSearchValue } = useContext(TodoContext);\r\n\r\n  const onInputTextChange = (ev) => {\r\n    setSearchValue(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchInputContainer\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar ToDo...\"\r\n        className=\"searchInput\"\r\n        value={searchValue}\r\n        onChange={onInputTextChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { TodoSearch };\r\n","import React from \"react\";\r\nimport \"../styles/TodoList.css\";\r\n\r\nconst TodoList = (props) => {\r\n  return (\r\n    <section className=\"container\">\r\n      <ul className=\"\">{props.children}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { TodoList };\r\n","import React from \"react\";\r\nimport { IconButton, Checkbox } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"../styles/TodoItem.css\";\r\n\r\nconst TodoItem = (props) => {\r\n  const onComplete = (taskID) => {\r\n    props.onToDoStateChange(taskID);\r\n  };\r\n\r\n  return (\r\n    <li className=\"item\">\r\n      <div className=\"textContainer\">\r\n        <Checkbox\r\n          checked={props.completed}\r\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          color=\"primary\"\r\n          onClick={() => onComplete(props.id)}\r\n        />\r\n        <p className={props.completed ? \"textTaskCompleted\" : \"\"}>\r\n          {props.text}\r\n        </p>\r\n      </div>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        onClick={() => props.deleteToDo(props.id)}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { TodoItem };\r\n","import ReactDOM from \"react-dom\";\r\nimport \"../styles/Modal.css\";\r\n\r\nconst Modal = ({ children }) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"ModalBackground\">{children}</div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n};\r\n\r\nexport { Modal };\r\n","import React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { TodoContext } from \"../Context\";\r\nimport \"../styles/Modal.css\";\r\n\r\nconst TodoForm = ({ setOpenModal }) => {\r\n  const { addToDo } = useContext(TodoContext);\r\n\r\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addToDo(newTodoValue);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setNewTodoValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <textarea\r\n        className=\"TodoTextarea\"\r\n        placeholder=\"Cortar la cebolla para el almuerzo...\"\r\n        value={newTodoValue}\r\n        onChange={onChange}\r\n      ></textarea>\r\n      <div className=\"ButtonsContainer\">\r\n        <button\r\n          onClick={onCancel}\r\n          type=\"button\"\r\n          className=\"Button CancelButton\"\r\n        >\r\n          Cancelar\r\n        </button>\r\n        <button\r\n          onClick={onSubmit}\r\n          type=\"submit\"\r\n          className=\"Button SubmitButton\"\r\n        >\r\n          AÃ±adir To Do\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport { TodoForm };\r\n","import React, { useContext } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { TodoContext } from \"../Context\";\r\nimport { CreateTodoButton } from \"../Components/CreateTodoButton\";\r\nimport { TodoCounter } from \"../Components/TodoCounter\";\r\nimport { TodoSearch } from \"../Components/TodoSearch\";\r\nimport { TodoList } from \"../Containers/TodoList\";\r\nimport { TodoItem } from \"../Components/TodoItem\";\r\nimport { Modal } from \"../Containers/Modal\";\r\nimport { TodoForm } from \"./TodoForm\";\r\n\r\nimport \"../styles/Modal.css\";\r\n\r\nconst AppUI = () => {\r\n  const {\r\n    error,\r\n    loading,\r\n    searchedToDos,\r\n    onToDoStateChange,\r\n    deleteToDo,\r\n    openModal,\r\n    setOpenModal,\r\n  } = useContext(TodoContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"title\">ðYour To Do List ð§¾</h1>\r\n      <TodoList>\r\n        <TodoCounter />\r\n        <TodoSearch />\r\n        {error && <p>Ha ocurrido un error...</p>}\r\n        {loading && <p>Cargando...</p>}\r\n        {!loading && !searchedToDos.length && <p>Crea tu primer ToDo</p>}\r\n\r\n        {searchedToDos.map((todo) => (\r\n          <TodoItem\r\n            text={todo.text}\r\n            key={todo.id}\r\n            id={todo.id}\r\n            completed={todo.completed}\r\n            onToDoStateChange={onToDoStateChange}\r\n            deleteToDo={deleteToDo}\r\n          />\r\n        ))}\r\n        <CreateTodoButton />\r\n      </TodoList>\r\n      {openModal && (\r\n        <Modal>\r\n          <CloseIcon\r\n            className=\"ModalCloseButton\"\r\n            onClick={() => setOpenModal(false)}\r\n          />\r\n          <div className=\"FormContainer\">\r\n            <h1>Agregar nuevo To Do</h1>\r\n            <TodoForm setOpenModal={setOpenModal} />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport { AppUI };\r\n","import React from \"react\";\r\nimport { AppUI } from \"./Containers/AppUI\";\r\nimport { TodoProvider } from \"./Context\";\r\nimport \"./App.css\";\r\n\r\n// const defaultToDos = [\r\n//   { id: 1, text: \"Cortar cebolla\", completed: true },\r\n//   { id: 2, text: \"Tomar el curso de Intro de React\", completed: false },\r\n//   {\r\n//     id: 3,\r\n//     text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In blandit eget libero nec consectetur. Donec vel risus sapien. Duis tincidunt id nibh a cursus. Vivamus quis velit eget nibh bibendum interdum. \",\r\n//     completed: false,\r\n//   },\r\n//   { id: 4, text: \"Llorar con la llorona\", completed: false },\r\n// ];\r\n\r\nfunction App() {\r\n  return (\r\n    <TodoProvider>\r\n      <AppUI />\r\n    </TodoProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}